/*
 * Legislate API
 * The Legislate API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.FieldDTO;
import io.swagger.client.model.Links;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * ContractResponseDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-07T16:18:08.349882+02:00[Europe/Madrid]")
public class ContractResponseDTO {
  @SerializedName("_links")
  private Links _links = null;

  @SerializedName("completedDate")
  private OffsetDateTime completedDate = null;

  @SerializedName("contract_name")
  private String contractName = null;

  @SerializedName("created_date")
  private OffsetDateTime createdDate = null;

  @SerializedName("fields")
  private List<FieldDTO> fields = null;

  @SerializedName("purchased_date")
  private OffsetDateTime purchasedDate = null;

  public ContractResponseDTO _links(Links _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(description = "")
  public Links getLinks() {
    return _links;
  }

  public void setLinks(Links _links) {
    this._links = _links;
  }

  public ContractResponseDTO completedDate(OffsetDateTime completedDate) {
    this.completedDate = completedDate;
    return this;
  }

   /**
   * Get completedDate
   * @return completedDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCompletedDate() {
    return completedDate;
  }

  public void setCompletedDate(OffsetDateTime completedDate) {
    this.completedDate = completedDate;
  }

  public ContractResponseDTO contractName(String contractName) {
    this.contractName = contractName;
    return this;
  }

   /**
   * Get contractName
   * @return contractName
  **/
  @Schema(description = "")
  public String getContractName() {
    return contractName;
  }

  public void setContractName(String contractName) {
    this.contractName = contractName;
  }

  public ContractResponseDTO createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public ContractResponseDTO fields(List<FieldDTO> fields) {
    this.fields = fields;
    return this;
  }

  public ContractResponseDTO addFieldsItem(FieldDTO fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<FieldDTO>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @Schema(description = "")
  public List<FieldDTO> getFields() {
    return fields;
  }

  public void setFields(List<FieldDTO> fields) {
    this.fields = fields;
  }

  public ContractResponseDTO purchasedDate(OffsetDateTime purchasedDate) {
    this.purchasedDate = purchasedDate;
    return this;
  }

   /**
   * Get purchasedDate
   * @return purchasedDate
  **/
  @Schema(description = "")
  public OffsetDateTime getPurchasedDate() {
    return purchasedDate;
  }

  public void setPurchasedDate(OffsetDateTime purchasedDate) {
    this.purchasedDate = purchasedDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContractResponseDTO contractResponseDTO = (ContractResponseDTO) o;
    return Objects.equals(this._links, contractResponseDTO._links) &&
        Objects.equals(this.completedDate, contractResponseDTO.completedDate) &&
        Objects.equals(this.contractName, contractResponseDTO.contractName) &&
        Objects.equals(this.createdDate, contractResponseDTO.createdDate) &&
        Objects.equals(this.fields, contractResponseDTO.fields) &&
        Objects.equals(this.purchasedDate, contractResponseDTO.purchasedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_links, completedDate, contractName, createdDate, fields, purchasedDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContractResponseDTO {\n");
    
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("    completedDate: ").append(toIndentedString(completedDate)).append("\n");
    sb.append("    contractName: ").append(toIndentedString(contractName)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    purchasedDate: ").append(toIndentedString(purchasedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
